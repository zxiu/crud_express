- column_types = @entry.class.columns.each_with_object(HashWithIndifferentAccess.new){|column, hsh| hsh[column.name] = column.type}
= simple_form_for @entry, url: url_for(controller: params[:controller], action: @entry.id.blank? ? :create : :update), remote: true do |f|
  - @entry.class.column_names.each do |column_name|
    - if @helper.permit?(column_name) && !@helper.includes_models.has_key?(column_name)
      - as = case column_types[column_name]
        - when :date
          - :date_picker
        - when :time
          - :time_picker
        - when :datetime
          - :datetime_picker
        - else column_types[column_name]
      - if @entry.class.defined_enums.has_key?(column_name)
        = f.input column_name,
            collection: @entry.class.defined_enums[column_name],
            selected: @entry.class.defined_enums[column_name][@entry.send(column_name)],
            include_blank: false
      - elsif !@entry.class.readonly_attributes.include?(column_name)
        = f.input column_name, as: as
  - @helper.includes_models.each do |model_name, config|
    - as = case @entry.class.reflect_on_association(model_name).macro
      - when :has_many, :has_and_belongs_to_many
        - :check_boxes
      - when :belongs_to, :has_one
        - :radio_buttons
    = f.association model_name, as: as, label_method: :to_json
  = f.button :submit, class: "btn btn-danger"
  = f.button :button, "Cancel", :type => :reset, :class => "btn btn-default", "data-dismiss" => "modal"

:javascript
  $('input.datetime_picker').datetimepicker();
  $('input.date_picker').datetimepicker();
